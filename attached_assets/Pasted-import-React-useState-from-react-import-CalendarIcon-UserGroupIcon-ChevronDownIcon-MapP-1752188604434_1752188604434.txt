import React, { useState } from 'react';
import { CalendarIcon, UserGroupIcon, ChevronDownIcon, MapPinIcon, ClockIcon } from 'lucide-react';

// Hero Component
export function Hero({ startDate, duration, onDateChange, onDurationChange, durations }) {
  return (
    <header className="relative h-[80vh] bg-cover bg-center" style={{ backgroundImage: "url('/images/heritage-hero.jpg')" }}>
      <div className="absolute inset-0 bg-black bg-opacity-50"></div>
      <div className="relative z-10 flex flex-col items-center justify-center h-full text-center px-6">
        <h1 className="text-white font-serif text-5xl md:text-6xl mb-4">
          Embark on a 5–12 Day Heritage Journey
        </h1>
        <p className="text-gray-200 max-w-2xl mb-8 text-lg md:text-xl">
          Step back into the reign of Marcus Aurelius, tracing marble columns and hidden frescoes—choose your dates and let history unfold before you.
        </p>
        <div className="bg-white bg-opacity-90 backdrop-blur-md rounded-lg p-4 flex flex-col md:flex-row items-center space-y-4 md:space-y-0 md:space-x-4 w-full max-w-2xl">
          <div className="flex items-center w-full md:w-1/2 border border-gray-300 rounded-lg p-2">
            <CalendarIcon className="h-6 w-6 text-gray-500 mr-2" />
            <input
              type="date"
              value={startDate}
              onChange={(e) => onDateChange(e.target.value)}
              className="flex-1 outline-none bg-transparent"
            />
          </div>
          <div className="relative flex items-center w-full md:w-1/3 border border-gray-300 rounded-lg p-2">
            <ClockIcon className="h-6 w-6 text-gray-500 mr-2" />
            <select
              value={duration}
              onChange={(e) => onDurationChange(+e.target.value)}
              className="w-full pr-8 outline-none bg-transparent"
            >
              {durations.map((d) => (
                <option key={d} value={d}>{d} days</option>
              ))}
            </select>
            <ChevronDownIcon className="absolute right-3 h-4 w-4 text-gray-500 pointer-events-none" />
          </div>
          <button className="bg-terra hover:bg-terra-dark text-white font-medium rounded-lg px-6 py-3 w-full md:w-auto">
            Find Tours
          </button>
        </div>
      </div>
    </header>
  );
}

// Filters Sidebar Component
export function Filters({ filters, setFilters, eras, regions }) {
  const toggleFilter = (key, value) => {
    setFilters(prev => ({
      ...prev,
      [key]: prev[key] === value ? '' : value
    }));
  };

  return (
    <aside className="w-1/4 p-4 bg-white rounded-lg shadow hidden lg:block">
      <h2 className="font-semibold mb-4">Filters</h2>
      <div className="mb-4">
        <label className="block mb-2 font-medium">Era</label>
        {eras.map(era => (
          <button
            key={era}
            onClick={() => toggleFilter('era', era)}
            className={`inline-block mr-2 mb-2 px-3 py-1 rounded-full border ${filters.era === era ? 'bg-terra text-white' : 'border-gray-300 text-gray-700'}`}
          >{era}</button>
        ))}
      </div>
      <div className="mb-4">
        <label className="block mb-2 font-medium">Region</label>
        {regions.map(region => (
          <button
            key={region}
            onClick={() => toggleFilter('region', region)}
            className={`inline-block mr-2 mb-2 px-3 py-1 rounded-full border ${filters.region === region ? 'bg-terra text-white' : 'border-gray-300 text-gray-700'}`}
          >{region}</button>
        ))}
      </div>
      <div className="mb-4">
        <label className="block mb-2 font-medium">Duration</label>
        <select
          value={filters.duration}
          onChange={e => setFilters(prev => ({ ...prev, duration: +e.target.value }))}
          className="w-full p-2 border rounded-lg"
        >
          {[5,6,7,8,9,10,11,12].map(d => (
            <option key={d} value={d}>{d} days</option>
          ))}
        </select>
      </div>
    </aside>
  );
}

// Main App Component
export default function App() {
  const durations = [5,6,7,8,9,10,11,12];
  const eras = ['Ancient', 'Medieval', 'Renaissance', 'Baroque'];
  const regions = ['Europe', 'Middle East', 'Asia', 'Africa'];

  const [startDate, setStartDate] = useState('');
  const [duration, setDuration] = useState(7);
  const [filters, setFilters] = useState({ era: '', region: '', duration: 7 });

  return (
    <div className="min-h-screen bg-gray-50">
      <Hero
        startDate={startDate}
        duration={duration}
        onDateChange={setStartDate}
        onDurationChange={d => { setDuration(d); setFilters(f => ({ ...f, duration: d })); }}
        durations={durations}
      />

      <main className="container mx-auto flex py-8">
        <Filters
          filters={filters}
          setFilters={setFilters}
          eras={eras}
          regions={regions}
        />

        {/* Results Grid (placeholder) */}
        <section className="flex-1 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {/* Map through filtered tours here */}
          {[...Array(6)].map((_, idx) => (
            <div key={idx} className="bg-white rounded-lg shadow overflow-hidden">
              {/* Tour Card content */}
            </div>
          ))}
        </section>
      </main>
    </div>
  );
}

// Tailwind CSS custom colors in your config:
// terra: '#A84C32',
// 'terra-dark': '#832F1F'
